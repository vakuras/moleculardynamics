///
/// About window implementation.
/// 
/// Molecular Dynamics Simulation on GPU
///
/// Written by Vadim Kuras. 2009-2010.
///

#include "stdafx.h"
#include "AboutWindow.h"

namespace ui 
{
	AboutWindow::AboutWindow()
	{
		InitializeComponent();
		drag=false;
		_titleBar->SetTitle("About Molecular::Dynamics");
	}

	void AboutWindow::InitializeComponent() //auto-generated by visual studio
	{
		System::ComponentModel::ComponentResourceManager^  resources = (gcnew System::ComponentModel::ComponentResourceManager(AboutWindow::typeid));
		_picAuthor = (gcnew System::Windows::Forms::PictureBox());
		_btnOk = (gcnew System::Windows::Forms::Button());
		_lblText = (gcnew System::Windows::Forms::Label());
		_titleBar = (gcnew TitleBar());
		_pnlWin = (gcnew System::Windows::Forms::Panel());
		(cli::safe_cast<System::ComponentModel::ISupportInitialize^  >(_picAuthor))->BeginInit();
		_pnlWin->SuspendLayout();
		SuspendLayout();
		_picAuthor->BackgroundImageLayout = System::Windows::Forms::ImageLayout::Stretch;
		_picAuthor->BorderStyle = System::Windows::Forms::BorderStyle::Fixed3D;
		_picAuthor->Location = System::Drawing::Point(7, 29);
		_picAuthor->Name = L"_picAuthor";
		_picAuthor->Size = System::Drawing::Size(200, 200);
		_picAuthor->TabIndex = 0;
		_picAuthor->TabStop = false;
		_btnOk->DialogResult = System::Windows::Forms::DialogResult::OK;
		_btnOk->Location = System::Drawing::Point(438, 206);
		_btnOk->Name = L"_btnOk";
		_btnOk->Size = System::Drawing::Size(75, 23);
		_btnOk->TabIndex = 1;
		_btnOk->Text = L"OK";
		_btnOk->UseVisualStyleBackColor = true;
		_lblText->BackColor = System::Drawing::Color::Transparent;
		_lblText->Font = (gcnew System::Drawing::Font(L"Lucida Console", 9.75F, System::Drawing::FontStyle::Regular, System::Drawing::GraphicsUnit::Point, 
			static_cast<System::Byte>(0)));
		_lblText->Location = System::Drawing::Point(213, 29);
		_lblText->Name = L"_lblText";
		_lblText->Size = System::Drawing::Size(300, 171);
		_lblText->TabIndex = 2;
		_lblText->Text = L"Molecular Dynamics Simulation on GPU\r\n\r\nWritten in:\r\nCUDA\r\nC/C++/C++.NET\r\nOpenGL\r" 
			L"\n\r\nWritten by Vadim Kuras. 2009-2010.\r\ncontact me @: vadim.kuras@gmail.com";
		_titleBar->Visible = true;
		_titleBar->Location.X = 0;
		_titleBar->Location.Y = 0;
		_titleBar->Dock = System::Windows::Forms::DockStyle::Top;
		_titleBar->CloseClicked += gcnew EventHandler(this, &AboutWindow::_titleBarEvent);
		_titleBar->MouseMove += gcnew System::Windows::Forms::MouseEventHandler(this, &AboutWindow::_titleBar_MouseMove);
		_titleBar->MouseDown += gcnew System::Windows::Forms::MouseEventHandler(this, &AboutWindow::_titleBar_MouseDown);
		_titleBar->MouseUp += gcnew System::Windows::Forms::MouseEventHandler(this, &AboutWindow::_titleBar_MouseUp); 
		_pnlWin->BackColor = System::Drawing::Color::Transparent;
		_pnlWin->BorderStyle = System::Windows::Forms::BorderStyle::FixedSingle;
		_pnlWin->Controls->Add(_titleBar);
		_pnlWin->Controls->Add(_btnOk);
		_pnlWin->Controls->Add(_lblText);
		_pnlWin->Controls->Add(_picAuthor);
		_pnlWin->Dock = System::Windows::Forms::DockStyle::Fill;
		_pnlWin->Location = System::Drawing::Point(0, 0);
		_pnlWin->Name = L"_pnlWin";
		_pnlWin->Size = System::Drawing::Size(530, 242);
		_pnlWin->TabIndex = 61;
		AcceptButton = _btnOk;
		AutoScaleDimensions = System::Drawing::SizeF(6, 13);
		AutoScaleMode = System::Windows::Forms::AutoScaleMode::Font;
		ClientSize = System::Drawing::Size(530, 242);
		Controls->Add(_pnlWin);
		FormBorderStyle = System::Windows::Forms::FormBorderStyle::None;
		Name = L"AboutWindow";
		Opacity = 0.9;
		StartPosition = System::Windows::Forms::FormStartPosition::CenterParent;
		Text = L"About Molecular::Dynamics";
		(cli::safe_cast<System::ComponentModel::ISupportInitialize^  >(_picAuthor))->EndInit();
		_pnlWin->ResumeLayout(false);
		ResumeLayout(false);

	}

	AboutWindow::~AboutWindow()
	{	
		if (components)	
		{
			delete components;	
		}
	}

	///
	/// When mouse is pressed on the title bar - drag is set and location is set to the mouse location
	///
	Void AboutWindow::_titleBar_MouseDown(Object^  , MouseEventArgs^ e )
	{
		drag = true;
		start = e->Location;
	}

	///
	/// Drag the window with the mouse
	///
	Void AboutWindow::_titleBar_MouseMove(Object^  , MouseEventArgs^  e)
	{
		if (!drag)
			return;

        Point ^ pts = PointToScreen(Point(e->X, e->Y));
        Point p3 = Point(pts->X - start.X, pts->Y - start.Y);
        Location = p3;
	}

	///
	/// Mouse is released -> and so the window.
	///
	Void AboutWindow::_titleBar_MouseUp(Object^  , MouseEventArgs^  )
	{
		drag = false;
	}

	///
	/// Closes the window.
	///
	Void AboutWindow::_titleBarEvent(Object^ , EventArgs^  ) 
	{
		Close();
	}
}